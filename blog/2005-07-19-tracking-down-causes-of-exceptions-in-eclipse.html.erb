---
title: 'Tracking down causes of exceptions in Eclipse'
author: 'Max Rydahl Andersen'
layout: blog-post
tags: [ Java ]
orignallink: 'http://blog.xam.dk/?p=50'
---
<body><p>If you like me is getting tired of seeing "Unhandled event loop exception, Reason: someexception" and no stacktrace in Eclipse then try the following:
<br><br>
Create a file e.g. <code>.eclipseoptions</code> with the following contents:
<br><br><code>
# Turn on debugging for the org.eclipse.ui plugin.
org.eclipse.ui.ide/debug=true
# Show a dialog with details button when an internal error occur.
org.eclipse.ui.ide/debug/internalerror/openDialog=true
# Print exception stacktrace to console
org.eclipse.ui.workbench/debug=true
</code>
<br><br>
and then run eclipse with <code>-debug .eclipseoptions</code> and you will get the full stacktrace
as normal in the log but also on the console (clickable) and in a dialog when the exception occurs - no need to go looking in the log what just happend.
<br><br>
p.s. try to include the following too:
<br><br><code>
# Enable heap status monitoring
org.eclipse.ui/debug=true
org.eclipse.ui/perf/showHeapStatus=true
</code>
<br><br>
Gives you a nice hint about memory you are "utilizing"</p></body>
